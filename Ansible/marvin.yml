---
- hosts: marvin
  gather_facts: true
  become: true
  roles:
    - { role: ubuntu_setup, tags: ['setup'] }
    - { role: ubuntu_maintenance, tags: ['setup'] }
    - { role: docker, tags: ['setup'] }
    - { role: web_server, tags: ['setup'] }

  tasks:
    - name: Ensure secrets folder exists
      become: true
      ansible.builtin.file:
        path: "/run/secrets/{{ item }}"
        state: directory
        mode: "0750"
      loop: "{{ project_dirs}}"

    - name: Write shared secrets files
      become: true
      no_log: true
      ansible.builtin.copy:
        content: "{{ item.value }}"
        dest: "/run/secrets/{{ item.dir }}/{{ item.key }}"
        mode: "0600"
      loop: "{{ secret_shared_env_vars | dict2items }}"
      loop_control:
        label: "{{ item }}"

    - name: Create project directory
      file:
        path: "{{ project_dir }}"
        state: directory
        recurse: yes
        mode: '0755'

    - name: Make sure project folders exists
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ server_admin_user }}"
        group: "{{ server_admin_user }}"
        mode: "0755"
      loop: "{{ project_dirs }}"





    - name: Clone the github repo
      ansible.builtin.git:
        repo: "https://{{ github_pat }}@github.com/{{ github_user }}/{{ github_repo }}.git"
        dest: "{{ project_dir }}"
        version: "{{ git_branch | default('main') }}"  # Change to 'prod' when applicable
        update: true
        force: true


    - name: Copy over configuration and docker files files
      ansible.builtin.copy:
        src: "files/grif-website/"
        dest: "{{ project_dir }}/"
        owner: "{{ server_admin_user }}"
        group: "{{ server_admin_user }}"
        mode: "0644"
      # loop:
      #   - files/grif-website/Caddyfile-internal
      #   - files/grif-website/Dockerfile
      #   - files/grif-website/docker-compose.yml

    - name: Write the front-facing Caddyfile
      template:
        src: "templates/grif-website/Caddyfile.j2"
        dest: "{{ project_dir }}/Caddyfile"

    - name: Build and deploy
      community.docker.docker_compose_v2:
        project_src: "{{ project_dir }}"
        state: present
        pull: always
        build: always
        recreate: always
        remove_orphans: true

    # - name: Recreate containers
    #   community.docker.docker_compose_v2:
    #     project_src: "{{ project_dir }}"
    #     recreate: always
    #     state: present

    - name: Remove dangling Docker images
      community.docker.docker_prune:
        images: true
        networks: true
        builder_cache: true
