---
- hosts: ve-streamlit
  gather_facts: true
  become: true
  roles:
    - ubuntu_setup
    - ubuntu_maintenance
    - docker

  pre_tasks:
    - name: update apt repository cache
      apt: update_cache=yes cache_valid_time=3600
      when: ansible_distribution == "ubuntu"


  tasks:
    - name: Enable UFW
      community.general.ufw:
        state: enabled

    - name: Make sure I can still SSH into the server
      community.general.ufw:
        rule: allow
        port: '22'
        proto: tcp

    - name: Make sure traffic is allowed on the http port
      community.general.ufw:
        rule: allow
        port: '80'
        proto: tcp

    - name: Make sure traffic is allowed on the https port
      community.general.ufw:
        rule: allow
        port: '443'
        proto: tcp

#    - name: create a folder for the compose project
#      file:
#        path: "{{ compose_project_dir }}"
#        state: directory
#        mode: '0755'

#    - name: create a folder for the streamlit applications
#      file:
#        path: "{{ compose_project_dir }}{{ application_dir }}"
#        state: directory
#        mode: '0755'

    - name: create folders for the compose applications
      file:
        path: "{{ compose_project_dir }}{{ application_dir }}/{{ item.name }}"
        state: directory
        mode: '0755'
        recurse: yes
      loop: "{{ apps }}"

    - name: Ensure a temporary key directory exists
      file:
        path: "{{ temp_ssh_key_dir }}"
        state: directory
        mode: '0700'

    - name: Write the SSH key to a temporary file
      copy:
        content: "{{ github_ssh_deploy_key }}"
        dest: "{{ temp_ssh_key_dir }}/id_rsa"
        mode: '0600'
      no_log: true

    - name: Clone the github application repo
      git:
        repo: git@github.com:Rasmus-VE/streamlit.git
        dest: "{{ compose_project_dir }}{{ application_dir }}/"
        accept_hostkey: true
        key_file: "{{ temp_ssh_key_dir}}/id_rsa"
        version: master  # Change to 'prod' when applicable

    - name: Remove the temporary SSH deploy key file securely
      shell: shred -zu -n 3 {{ temp_ssh_key_dir|quote }}/id_rsa

    - name: Remove the temporary directory
      file:
        path: "{{ temp_ssh_key_dir }}"
        state: absent

    - name: Write the Dockerfiles
      template:
        src: "templates/ve-streamlit/Dockerfile.js"
        dest: "{{ compose_project_dir }}/{{ item.name }}/Dockerfile"
      loop: "{{ apps }}"
      vars:
        port: "{{ item.port }}"
        app_name: "{{ item.name }}"
        application_dir: "{{ application_dir }}"

    - name: Write the docker compose file
      template:
        src: "templates/ve-streamlit/docker-compose.yml.js"
        dest: "{{ compose_project_dir }}/docker-compose.yml"

    - name: Write the Caddyfile
      template:
        src: "templates/ve-streamlit/Caddyfile.js"
        dest: "{{ compose_project_dir }}/Caddyfile"

    - name: Pull latest versions of all docker images
      community.docker.docker_compose_v2:
        project_src: "{{ compose_project_dir }}"
        pull: always
        state: present

    - name: Deploy the application with Docker compose
      community.docker.docker_compose_v2:
        project_src: "{{ compose_project_dir }}"
        build: always
        recreate: always
        state: present

    - name: Remove dangling Docker images
      community.docker.docker_prune:
        images: true
        networks: true
        builder_cache: true


