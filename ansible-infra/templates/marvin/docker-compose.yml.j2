services:
  plausible_db:
    image: postgres:16-alpine
    restart: always
    networks:
      - plausible
    volumes:
      - db-data:/var/lib/postgresql/data
      - /run/secrets/{{ plausible_project_dir }}:/run/secrets:ro
    environment:
      POSTGRES_DB: plausible_db
      POSTGRES_USER: plausible
      POSTGRES_PASSWORD_FILE: /run/secrets/POSTGRES_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      start_period: 1m


  plausible_events_db:
    image: clickhouse/clickhouse-server:24.12-alpine
    restart: always
    networks:
      - plausible
    volumes:
      - event-data:/var/lib/clickhouse
      - event-logs:/var/log/clickhouse-server
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    environment:
       - CLICKHOUSE_SKIP_USER_SETUP=1
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 -O - http://127.0.0.1:8123/ping || exit 1"]
      start_period: 1m

  plausible:
    image: ghcr.io/plausible/community-edition:v3.0.1
    restart: always
    networks:
      - plausible
    command: sh -c "/entrypoint.sh db createdb && /entrypoint.sh db migrate && /entrypoint.sh run"
    depends_on:
      plausible_db:
        condition: service_healthy
      plausible_events_db:
        condition: service_healthy
    volumes:
      - plausible-data:/var/lib/plausible
      - /run/secrets/{{ plausible_project_dir }}:/run/secrets:ro
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    environment:
      CONFIG_DIR: /run/secrets
      TMPDIR: /var/lib/plausible/tmp
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/system/health || exit 1"]
      start_period: 2m
      interval: 30s
      timeout: 10s
      retries: 3

  caddy:
    image: caddy:latest
    container_name: caddy
    restart: unless-stopped
    networks:
      - plausible
      - ntfy
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

  ntfy:
    image: binwiederhier/ntfy
    container_name: ntfy
    command:
      - serve
    environment:
      - TZ={{ timezone }}
    networks:
      - ntfy
    volumes:
      - ntfy_cache:/var/cache/ntfy
      - ./ntfy-server.yml:/etc/ntfy/server.yml:ro
      - ntfy_users:/var/lib/ntfy
    healthcheck:
      test: ["CMD-SHELL", "wget -q --tries=1 http://localhost:80/v1/health -O - | grep -Eo '\"healthy\"\\s*:\\s*true' || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    init: true

networks:
  plausible:
    name: plausible
    driver: bridge
  ntfy:
    name: ntfy
    driver: bridge

volumes:
  db-data:
  event-data:
  event-logs:
  plausible-data:
  caddy_data:
  caddy_config:
  ntfy_cache:
  ntfy_users:
